{"version":3,"sources":["pokemon_logo.png","Home.js","Detail.js","List.js","Search.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","src","logo","alt","Component","POKEMON_DETAIL","gql","Detail","query","loading","error","data","message","console","log","List","Search","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","SearchAppBar","classes","AppBar","Toolbar","IconButton","edge","aria-label","Typography","variant","noWrap","InputBase","placeholder","input","inputProps","client","ApolloClient","uri","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6a375a59.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokemon_logo.531d7bd5.png\";","import React, { Component } from 'react';\nimport logo from './pokemon_logo.png';\nimport './App.css'\n\n\nclass Home extends Component {\n render(){\n return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      </header>\n       <section>\n         <div>\n           <p>Bem Vindo</p>\n         </div>\n       </section>\n       \n    </div>\n );\n }\n}export default Home;","import React, { Component } from 'react';\nimport './App.css'\n// import { useQuery, Query} from '@apollo/react-hooks';\nimport { Query } from 'react-apollo';\nimport { gql } from 'apollo-boost';\n\nconst POKEMON_DETAIL = gql`\n{\n  pokemon(name: \"Pikachu\") {\n    id\n    number\n    image\n    name\n    attacks {\n      special {\n        name\n        type\n        damage\n      }\n    }\n    evolutions {\n      id\n      number\n      name\n      weight {\n        minimum\n        maximum\n      }\n      attacks {\n        fast {\n          name\n          type\n          damage\n        }\n      }\n    }\n  }\n}\n`;\n\n\n\nclass Detail extends Component {\n\n render(){\n\n return (\n    <div className=\"App\">\n       <header className=\"App-header\">\n          <h1 className=\"App-title\">Detalhes sobre o pokemon</h1>\n       </header>\n       <p className=\"App-intro\">\n            esse pokemon top\n\n            <Query query={POKEMON_DETAIL}>\n            {({ loading, error, data }) => {\n              if (loading) return \"Loading...\";\n              if (error) return `Error! ${error.message}`;\n\n              console.log(data)\n\n              \n              return (\n                <>\n\n                </>\n                // <select name=\"dog\" onChange={onDogSelected}>\n                //   {data.dogs.map(dog => (\n                //     <option key={dog.id} value={dog.breed}>\n                //       {dog.breed}\n                //     </option>\n                //   ))}\n                // </select>\n              );\n            }}\n\n            </Query>\n            \n       </p>\n    </div>\n );\n }\n}export default Detail;","import React, { Component } from 'react';\nimport './App.css'\n\n\nclass List extends Component {\n render(){\n return (\n    <div className=\"App\">\n       <header className=\"App-header\">\n          \n          <h1 className=\"App-title\">Lista de pokemons</h1>\n       </header>\n       <p className=\"App-intro\">\n            Pokemons\n       </p>\n    </div>\n );\n }\n}export default List;","import React, { Component } from 'react';\nimport './App.css'\n\n\nclass Search extends Component {\n render(){\n return (\n    <div className=\"App\">\n       <header className=\"App-header\">\n          \n          <h1 className=\"App-title\">Busca pokemon</h1>\n       </header>\n       <section>\n         <div>\n           <form >\n             <input></input>\n             <button>bucar</button>\n           </form>\n         </div>\n       </section>\n       \n    </div>\n );\n }\n}export default Search;","import React from 'react';\nimport { BrowserRouter, Route, Link,Switch } from 'react-router-dom';\nimport logo from './pokemon_logo.png';\nimport './App.css';\n\n// pages\nimport Home from './Home'\nimport Detail from './Detail';\nimport List from './List';\nimport Search from './Search';\n\n// apollo\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient from 'apollo-boost';\n\n// material-ui\nimport Container from '@material-ui/core/Container';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200,\n      },\n    },\n  },\n}));\n\n\nfunction SearchAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Pokemon App\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Searchâ€¦\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\n// apollo client \nconst client = new ApolloClient({\n  uri: 'https://graphql-pokemon.now.sh',\n});\n\nfunction App() {\n  return (\n    // <Container fixed>\n    <div className=\"App\">\n      <SearchAppBar />\n      <section>\n        <ApolloProvider client={client}>\n          <BrowserRouter>\n            <Switch>\n                <Route exact path='/' component={Home}/>\n                <Route path='/detail' component={Detail}/>\n                <Route path='/list' component={List}/>\n                <Route path='/search' component={Search}/>\n              </Switch>\n          </ BrowserRouter>\n        </ApolloProvider>\n      </section>\n      <footer>\n      </footer>\n    </div>\n    // </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}